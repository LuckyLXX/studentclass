<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ren.studentclass.dao.ClassInfoDao">
  <resultMap id="BaseResultMap" type="com.ren.studentclass.model.ClassInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="all_num" jdbcType="INTEGER" property="allNum" />
    <result column="task_num" jdbcType="INTEGER" property="taskNum" />
    <result column="test_num" jdbcType="INTEGER" property="testNum" />
    <result column="student_num" jdbcType="INTEGER" property="studentNum" />
    <result column="pv_num" jdbcType="INTEGER" property="pvNum" />
    <result column="job_finish" jdbcType="INTEGER" property="jobFinish" />
    <result column="job_grade" jdbcType="INTEGER" property="jobGrade" />
    <result column="exam" jdbcType="INTEGER" property="exam" />
    <result column="exam_finish" jdbcType="VARCHAR" property="examFinish" />
    <result column="exam_grade" jdbcType="FLOAT" property="examGrade" />
    <result column="job_in_num" jdbcType="INTEGER" property="jobInNum" />
    <result column="exam_in_num" jdbcType="INTEGER" property="examInNum" />
    <result column="course_interact" jdbcType="INTEGER" property="courseInteract" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, course_id, all_num, task_num, test_num, student_num, pv_num, job_finish, job_grade, 
    exam, exam_finish, exam_grade, job_in_num, exam_in_num, course_interact
  </sql>
  <select id="selectByExample" parameterType="com.ren.studentclass.model.ClassInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from class_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from class_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ren.studentclass.model.ClassInfoExample">
    delete from class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ren.studentclass.model.ClassInfo" useGeneratedKeys="true">
    insert into class_info (course_id, all_num, task_num, 
      test_num, student_num, pv_num, 
      job_finish, job_grade, exam, 
      exam_finish, exam_grade, job_in_num, 
      exam_in_num, course_interact)
    values (#{courseId,jdbcType=INTEGER}, #{allNum,jdbcType=INTEGER}, #{taskNum,jdbcType=INTEGER}, 
      #{testNum,jdbcType=INTEGER}, #{studentNum,jdbcType=INTEGER}, #{pvNum,jdbcType=INTEGER}, 
      #{jobFinish,jdbcType=INTEGER}, #{jobGrade,jdbcType=INTEGER}, #{exam,jdbcType=INTEGER}, 
      #{examFinish,jdbcType=VARCHAR}, #{examGrade,jdbcType=FLOAT}, #{jobInNum,jdbcType=INTEGER}, 
      #{examInNum,jdbcType=INTEGER}, #{courseInteract,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ren.studentclass.model.ClassInfo" useGeneratedKeys="true">
    insert into class_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="allNum != null">
        all_num,
      </if>
      <if test="taskNum != null">
        task_num,
      </if>
      <if test="testNum != null">
        test_num,
      </if>
      <if test="studentNum != null">
        student_num,
      </if>
      <if test="pvNum != null">
        pv_num,
      </if>
      <if test="jobFinish != null">
        job_finish,
      </if>
      <if test="jobGrade != null">
        job_grade,
      </if>
      <if test="exam != null">
        exam,
      </if>
      <if test="examFinish != null">
        exam_finish,
      </if>
      <if test="examGrade != null">
        exam_grade,
      </if>
      <if test="jobInNum != null">
        job_in_num,
      </if>
      <if test="examInNum != null">
        exam_in_num,
      </if>
      <if test="courseInteract != null">
        course_interact,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="allNum != null">
        #{allNum,jdbcType=INTEGER},
      </if>
      <if test="taskNum != null">
        #{taskNum,jdbcType=INTEGER},
      </if>
      <if test="testNum != null">
        #{testNum,jdbcType=INTEGER},
      </if>
      <if test="studentNum != null">
        #{studentNum,jdbcType=INTEGER},
      </if>
      <if test="pvNum != null">
        #{pvNum,jdbcType=INTEGER},
      </if>
      <if test="jobFinish != null">
        #{jobFinish,jdbcType=INTEGER},
      </if>
      <if test="jobGrade != null">
        #{jobGrade,jdbcType=INTEGER},
      </if>
      <if test="exam != null">
        #{exam,jdbcType=INTEGER},
      </if>
      <if test="examFinish != null">
        #{examFinish,jdbcType=VARCHAR},
      </if>
      <if test="examGrade != null">
        #{examGrade,jdbcType=FLOAT},
      </if>
      <if test="jobInNum != null">
        #{jobInNum,jdbcType=INTEGER},
      </if>
      <if test="examInNum != null">
        #{examInNum,jdbcType=INTEGER},
      </if>
      <if test="courseInteract != null">
        #{courseInteract,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ren.studentclass.model.ClassInfoExample" resultType="java.lang.Long">
    select count(*) from class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update class_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.allNum != null">
        all_num = #{record.allNum,jdbcType=INTEGER},
      </if>
      <if test="record.taskNum != null">
        task_num = #{record.taskNum,jdbcType=INTEGER},
      </if>
      <if test="record.testNum != null">
        test_num = #{record.testNum,jdbcType=INTEGER},
      </if>
      <if test="record.studentNum != null">
        student_num = #{record.studentNum,jdbcType=INTEGER},
      </if>
      <if test="record.pvNum != null">
        pv_num = #{record.pvNum,jdbcType=INTEGER},
      </if>
      <if test="record.jobFinish != null">
        job_finish = #{record.jobFinish,jdbcType=INTEGER},
      </if>
      <if test="record.jobGrade != null">
        job_grade = #{record.jobGrade,jdbcType=INTEGER},
      </if>
      <if test="record.exam != null">
        exam = #{record.exam,jdbcType=INTEGER},
      </if>
      <if test="record.examFinish != null">
        exam_finish = #{record.examFinish,jdbcType=VARCHAR},
      </if>
      <if test="record.examGrade != null">
        exam_grade = #{record.examGrade,jdbcType=FLOAT},
      </if>
      <if test="record.jobInNum != null">
        job_in_num = #{record.jobInNum,jdbcType=INTEGER},
      </if>
      <if test="record.examInNum != null">
        exam_in_num = #{record.examInNum,jdbcType=INTEGER},
      </if>
      <if test="record.courseInteract != null">
        course_interact = #{record.courseInteract,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update class_info
    set id = #{record.id,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      all_num = #{record.allNum,jdbcType=INTEGER},
      task_num = #{record.taskNum,jdbcType=INTEGER},
      test_num = #{record.testNum,jdbcType=INTEGER},
      student_num = #{record.studentNum,jdbcType=INTEGER},
      pv_num = #{record.pvNum,jdbcType=INTEGER},
      job_finish = #{record.jobFinish,jdbcType=INTEGER},
      job_grade = #{record.jobGrade,jdbcType=INTEGER},
      exam = #{record.exam,jdbcType=INTEGER},
      exam_finish = #{record.examFinish,jdbcType=VARCHAR},
      exam_grade = #{record.examGrade,jdbcType=FLOAT},
      job_in_num = #{record.jobInNum,jdbcType=INTEGER},
      exam_in_num = #{record.examInNum,jdbcType=INTEGER},
      course_interact = #{record.courseInteract,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ren.studentclass.model.ClassInfo">
    update class_info
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="allNum != null">
        all_num = #{allNum,jdbcType=INTEGER},
      </if>
      <if test="taskNum != null">
        task_num = #{taskNum,jdbcType=INTEGER},
      </if>
      <if test="testNum != null">
        test_num = #{testNum,jdbcType=INTEGER},
      </if>
      <if test="studentNum != null">
        student_num = #{studentNum,jdbcType=INTEGER},
      </if>
      <if test="pvNum != null">
        pv_num = #{pvNum,jdbcType=INTEGER},
      </if>
      <if test="jobFinish != null">
        job_finish = #{jobFinish,jdbcType=INTEGER},
      </if>
      <if test="jobGrade != null">
        job_grade = #{jobGrade,jdbcType=INTEGER},
      </if>
      <if test="exam != null">
        exam = #{exam,jdbcType=INTEGER},
      </if>
      <if test="examFinish != null">
        exam_finish = #{examFinish,jdbcType=VARCHAR},
      </if>
      <if test="examGrade != null">
        exam_grade = #{examGrade,jdbcType=FLOAT},
      </if>
      <if test="jobInNum != null">
        job_in_num = #{jobInNum,jdbcType=INTEGER},
      </if>
      <if test="examInNum != null">
        exam_in_num = #{examInNum,jdbcType=INTEGER},
      </if>
      <if test="courseInteract != null">
        course_interact = #{courseInteract,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ren.studentclass.model.ClassInfo">
    update class_info
    set course_id = #{courseId,jdbcType=INTEGER},
      all_num = #{allNum,jdbcType=INTEGER},
      task_num = #{taskNum,jdbcType=INTEGER},
      test_num = #{testNum,jdbcType=INTEGER},
      student_num = #{studentNum,jdbcType=INTEGER},
      pv_num = #{pvNum,jdbcType=INTEGER},
      job_finish = #{jobFinish,jdbcType=INTEGER},
      job_grade = #{jobGrade,jdbcType=INTEGER},
      exam = #{exam,jdbcType=INTEGER},
      exam_finish = #{examFinish,jdbcType=VARCHAR},
      exam_grade = #{examGrade,jdbcType=FLOAT},
      job_in_num = #{jobInNum,jdbcType=INTEGER},
      exam_in_num = #{examInNum,jdbcType=INTEGER},
      course_interact = #{courseInteract,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>